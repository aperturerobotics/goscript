When you want to make substantial changes to code files you may ask a much much more senior engineer than you to complete a task by first writing the details of the task you want to complete and the message to the engineer to `.aider-prompt` in the workspace root and then call `aider` with the --message-file flag pointing to this file, including the filenames of all relevant code files and the files to edit as arguments. For example: `aider --yes-always --no-git --no-pretty --message-file .aider-prompt source_file.go other_source_file.ts information.md` - remember that `aider` is a shell command. Explicitly tell aider to not make any file changes if you don't expressly want that to happen.
When using the `aider` tool add `--architect` only when asking aider to make changes to files and add `--model gpt-4.1-mini` if the task is not that hard or you are just asking questions.
Remember that `aider` is a single-turn AI tool and cannot access git history or run commands directly. To review changes, provide the relevant file contents to `aider` via command line arguments and the `.aider-prompt` file. The `.aider-prompt` file should contain the task description and any additional context needed for the review.
If you are attempting to do something for a long time and are stuck or taking too long just use aider instead to ask the advanced ai to think through the problem for you.
