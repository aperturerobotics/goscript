You may invoke an advanced artificial intelligence to analyze code or make edits to code by first writing the details of the task you want to complete and the prompt to `.aider-prompt` in the workspace root and then running the `aider` command-line tool with the --message-file flag set to `.aider-prompt`, including the filenames of all relevant code files and the files to edit as arguments. For example: `aider --yes-always --no-git --no-pretty --message-file .aider-prompt source_file.go other_source_file.ts information.md` - remember that `aider` is a shell command. Explicitly tell aider to not make any file changes if you don't expressly want that to happen.
When using the `aider` tool add the `--architect` flag when asking aider to make difficult changes to files and add `--model gpt-4.1-mini` if the task is not that hard or you are just asking questions. Otherwise do not specify the `--model` nor the `--architect` flags.
Remember that `aider` is a single-turn AI tool and cannot access git history or run commands directly. To review changes, provide the relevant file contents to `aider` via command line arguments and the `.aider-prompt` file. The `.aider-prompt` file should contain the task description and any additional context needed for the review.
Pass all of the compiler source files as arguments to aider. You can use "./compiler/*.go ./builtin/builtin.ts" to include all relevant files.
